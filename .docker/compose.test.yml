services:

  catalog:
    container_name: catalog
    image: catalog
    build: .
    env_file:
      - .env
    ports:
      - 8000:8000
    volumes:
      - $PWD/backend:/catalog
      - static:/var/www/static
      - media:/var/www/media
    tty: true
    stdin_open: true
    restart: unless-stopped
    command: "gunicorn main.wsgi:application --bind '0.0.0.0:8000' --reload"

  db:
    container_name: catalogdb
    image: postgres:latest
    env_file: .env
    volumes:
      - pgdata:/var/lib/postgresql/data

  caddy:
    container_name: mmp_caddy
    image: caddy:latest
    ports:
      - "80:80"
      - "443:443"

    volumes:
      # Caddy specific urls
        - $PWD/.docker/caddy/Caddyfile:/etc/caddy/Caddyfile
        - type: volume
          source: media
          target: /usr/share/caddy/media
          read_only: true
          volume:
            nocopy: true
        - type: volume
          source: static
          target: /usr/share/caddy/static
          read_only: true
          volume:
            nocopy: true
    restart: unless-stopped

  # neo4j:
  #   container_name: neo4j
  #   image: neo4j:latest
  #   ports:
  #     - 7474:7474
  #     - 7687:7687
  #   environment:
  #     - NEO4J_AUTH=neo4j/${NEO4J_PASSWORD}
  #     - NEO4J_apoc_export_file_enabled=true
  #     - NEO4J_apoc_import_file_enabled=true
  #     - NEO4J_apoc_import_file_use__neo4j__config=true
  #     - NEO4J_PLUGINS=["apoc", "graph-data-science"]
  #   volumes:
  #     - neo4j_db_data:/data
  #     - neo4j_db_logs:/logs
  #     - neo4j_db_import:/var/lib/neo4j/import
  #     - neo4j_db_plugins:/plugins

volumes:
  pgdata:
  static:
  media:
  # neo4j_db_data:
  # neo4j_db_logs:
  # neo4j_db_import:
  # neo4j_db_plugins:
